<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:aht="http://ahtutils.sourceforge.net/jsf"
	xmlns:p="http://primefaces.org/ui"
	xmlns:geojsf="http://geojsf.sourceforge.net/ui"
	template="/WEB-INF/templates/geojsf.xhtml">
	<ui:define name="tracking"><ui:fragment rendered="#{trackingBean.track('tutorialDataStructure')}"/></ui:define>
	<ui:define name="menu"><aht:menuUl value="#{menuBean.build('tutorialDataStructure')}" scActive="active"/></ui:define>
	<ui:define name="headline"><aht:breadcrumb value="#{menuBean.breadcrumb('tutorialDataStructure')}"/></ui:define>
	<ui:define name="content">
		<div class="row">
			<div class="span3">
				<h3>Tutorial</h3>
				<div class="sidemenu">
					<aht:menuUl value="#{menuBean.sub('tutorial')}" sc1="top-level"/>
				</div>
			</div>
			<div class="span9">
				<h1>GeoJSF Data Structure</h1>
				
				The datastructure is restricted with generic interfaces and a default implementation.
				It's possible to use a completely custom implementation, the default implementation or a mixture of them.

				Also Entity Java Beans can be used to implement these generic interfaces and directly persist the configuration of
				all map related parameter in the database.
				
				<h3>GeoJsfService</h3>
				
				The service is in most cases a WMS compatible service.
				Each service can have multiple available layer.
				
				<aht:highlight lang="java" resource="/code.geojsf/datastructure/GeoJsfService.java"/>
				
				<h3>GeoJsfLayer</h3>
				
				Each layer must be defined with a code and the corresponding service.
				
				<aht:highlight lang="java" resource="/code.geojsf/datastructure/GeoJsfLayer.java"/>
				
				<h3>GeoJsfView</h3>
				
				Different layers can be aggregated to a custom thematic map (aka view).
				The view simply contains a list of so called view-layers.
				
				<aht:highlight lang="java" resource="/code.geojsf/datastructure/GeoJsfView.java"/>
				
				<h3>GeoJsfViewLayer</h3>
				
				A VL containes the ordering in the current thematic map and flag if the layer is visible by default.
				
				<aht:highlight lang="java" resource="/code.geojsf/datastructure/GeoJsfViewLayer.java"/>
				
				<h3>Default Implementation</h3>
				
				The showcase is directly using the default implementations. 
				
				<ul>
					<li>DefaultGeoJsfService</li> 
					<li>DefaultGeoJsfLayer</li>
					<li>DefaultGeoJsfView</li>
					<li>DefaultGeoJsfLang</li>
					<li>DefaultGeoJsfDescription</li>
				</ul>
					
			</div>
		</div>
	</ui:define>
</ui:composition>
