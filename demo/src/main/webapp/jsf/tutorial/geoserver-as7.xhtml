<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:aht="http://ahtutils.sourceforge.net/jsf"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:geojsf="http://geojsf.sourceforge.net/ui"
	template="/WEB-INF/templates/geojsf.xhtml">
	<ui:define name="tracking"><ui:fragment rendered="#{trackingBean.track('tutorialGeoServerAS7')}"/></ui:define>
	<ui:define name="menu"><aht:menuUl value="#{menuBean.build('tutorialGeoServerAS7')}" scActive="active"/></ui:define>
	<ui:define name="headline"><aht:breadcrumb value="#{menuBean.breadcrumb('tutorialGeoServerAS7')}"/></ui:define>
	<ui:define name="content">
		<div class="row">
			<div class="span3">
				<h3>Tutorial</h3>
				<div class="sidemenu">
					<aht:menuUl value="#{menuBean.sub('tutorial')}" sc1="top-level"/>
				</div>
			</div>
			<div class="span9">
				<h1>GeoServer and JBoss AS7</h1>
				Especially for developer systems it is very helpful to have GeoServer integrated into JBoss-AS and not start
				a separate process.
				Fur this purpose one download format of GeoServer is a <i>Web Archive</i>.
				While this is running without problems on Tomcat. JBoss throws a
				<b>java.lang.ClassNotFoundException: com.sun.imageio.spi.FileImageInputStreamSpi</b>
				during deployment of <i>geoserver.war</i>.
				
				<h3>Modified geoserver.war</h3>
				The file <i>/WEB-INF/jboss-deployment-structure.xml</i> must be created inside the WAR 
				archive with the following content:
				<aht:highlight resource="/code.geojsf/tutorial/geoserver/as7/jboss-deployment-structure.xml"/>
				While already modifying the <i>geoserver.war</i> it's a good idea to set the 
				<h:outputLink value="http://docs.geoserver.org/stable/en/user/datadirectory/data-dir-setting.html#data-dir-setting">data directory</h:outputLink>
				
				
				<h3>JBoss logging system</h3>
				The deployment of geoserver overwrites the log4j logging system of JBoss and the logging is in fact broken.
				Adding the following line to the end of <b>bin/standalone.conf</b> prevents this.
				<aht:highlight resource="/code.geojsf/geoserver-jboss/logging.txt"/>		
				
				<h3>Compatibility Matrix</h3>
				<table border="0">
					<tr>
						<td>Version</td>
						<td>Geoserver-2.2.2</td>
					</tr>
					<tr>
						<td>JBoss-AS 7.1.1-Final</td>
						<td>OK</td>
					</tr>
				</table>
				
				<h3>Detailed Error Message</h3>
				<aht:highlight resource="/code.geojsf/tutorial/geoserver/as7/error.txt"/>
					

				
			</div>
			
		</div>
	</ui:define>
</ui:composition>
