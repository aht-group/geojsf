<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:aht="http://ahtutils.sourceforge.net/jsf"
	xmlns:p="http://primefaces.org/ui"
	xmlns:geojsf="http://geojsf.sourceforge.net/ui"
	template="/WEB-INF/templates/geojsf.xhtml">
	<ui:define name="tracking"><ui:fragment rendered="#{trackingBean.track('tutorialHibernate')}"/></ui:define>
	<ui:define name="menu"><aht:menuUl value="#{menuBean.build('tutorialHibernate')}" scActive="active"/></ui:define>
	<ui:define name="headline"><aht:breadcrumb value="#{menuBean.breadcrumb('tutorialHibernate')}"/></ui:define>
	<ui:define name="content">
		<div class="row">
			<div class="span3">
				<h3>Tutorial</h3>
				<div class="sidemenu">
					<aht:menuUl value="#{menuBean.sub('tutorial')}" sc1="top-level"/>
				</div>
			</div>
			<div class="span9">
				<h1>Hibernate Spatial</h1>
				
				Hibernate Spatial is extremly helpful if you are using JPA and also want to manage
				spatial datypes directly in your Entity Beans.
				
				<h3>Maven dependencies</h3>
				The maven dependency to hibernate is normally located in your <i>ejb</i> module
				in an ear project (where persistence.xml) is located or in the war module.
				<aht:highlight resource="/code.geojsf/tutorial/hibernate/dependency.xml"/>
				The required repository is:
				<aht:highlight resource="/code.geojsf/tutorial/hibernate/repository.xml"/>
				It's helpful to exclude some artifacts, at least in an JBoss AS7 environment.
				The remaining active dependencies are jts-1.12.jar and postgis-1.5.3.jar.
				While jts os available in the maven repositories,
				postgis must be compiled manually.
				
				<h3>PostGis</h3>
				Since there is a dependency to postgis-1.5.3 in the lastest version of hibernatespatial,
				you should compile this version. While it is not available on the
				<h:outputLink value="http://postgis.refractions.net/download/">postgis website</h:outputLink> anymore,
				the source can be be reached by a
				<h:outputLink value="http://download.osgeo.org/postgis/source/postgis-1.5.3.tar.gz">direct link</h:outputLink>.
				Copy the postgresql-8.4-701.jdbc4.jar (since hibernatespatial has this version as a dependency) to postgis-1.5.3/java/jdbc
				and modify the Makefile
				<aht:highlight resource="/code.geojsf/hibernatespatial/Makefile"/>
				Then you need to make it and get a postgis_1.5.3.jar (which should be renamed to postgis-1.5.3.jar).
				You can add this to your Nexus repository or to your local repository
				<aht:highlight resource="/code.geojsf/hibernatespatial/maven.txt"/>
				
				<h3>JBoss AS Module: PostgreSQL</h3>
				Similar to other JDBC database drivers, a module <b>org.postgresql</b> must be created. Create the directory
				<b>/modules/org/postgresql/main/</b> and save the file <b>module.xml</b> with the following content:
				<aht:highlight resource="/code.geojsf/hibernatespatial/module-postgresql.xml"/>
				The specified files need to be saved in the same location. PostgreSQL may be the latest version,
				hibernatespatial needs to be the version 1.5.3 (since HibernateSpatial 4.xx has this as a dependency).
				While compiling the postgis.jar postgresql-8.3-607.jdbc4.jar is required, but it's safe to use
				a recent version as the actual database driver.
				
				<h3>JBoss AS Module: Hibernate</h3>
				The module <b>hibernate</b> already exists and must be extended:
				<aht:highlight resource="/code.geojsf/hibernatespatial/module-hibernate.xml"/>
				The specified files need to be saved.
				
				<h3>JBoss AS: Datasource</h3>
				The database driver and connection must be defined in <b>standalone/configuration/standalone.xml</b>:
				<aht:highlight resource="/code.geojsf/hibernatespatial/configuration-standalone.xml"/>
				
				<h3>persistence.xml</h3>
				<aht:highlight resource="/code.geojsf/hibernatespatial/persistence.xml"/>
			</div>
		</div>
	</ui:define>
</ui:composition>
