<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ofx:section xmlns:ofx="http://www.openfuxml.org"
			xmlns:l="http://www.openfuxml.org/list"
			xmlns:text="http://www.openfuxml.org/text"
			id="section.admin.installation.geoserver">
	<ofx:title lang="en">GeoServer</ofx:title>
	
	<ofx:paragraph lang="en">
		GeoServer is an open-source server written in Java an allows users to
		share, process and edit geospatial data.
	</ofx:paragraph>
	
	<ofx:paragraph lang="en">
		Designed for interoperability, it publishes data from any major spatial data
		source using open standards. GeoServer has evolved to become an easy method of
		connecting existing information to Virtual Globes such as Google Earth and NAS
		 World Wind as well as to web-based maps such as OpenLayers, Google Maps and Bing Maps.
	</ofx:paragraph>
	
	<ofx:paragraph lang="en">
		GeoServer functions as the reference implementation of the Open Geospatial Consortium
		Web Feature Service (WFS) standard, and also implements the
		Web Map Service (WMS), Web Coverage Service (WCS)
		and Web Processing Service (WPS) specifications.
	</ofx:paragraph>
	   
	<ofx:section id="section.admin.installation.geoserver.installation">
		<ofx:title lang="en">Installation</ofx:title>
	</ofx:section>
	
	<ofx:section id="section.admin.installation.geoserver.configuration">
		<ofx:title lang="en">Configuration</ofx:title>
		
		<ofx:paragraph lang="en">
			There are several individual configurations required for GeoServer to properly show the maps
			required for this information system. These configurations include:
		</ofx:paragraph>
		
		<l:list>
		    <l:type ordering="unordered"/>
		    
		    <l:item>
		    	<ofx:paragraph lang="en">
					A new <text:emphasis bold="true">workspace</text:emphasis> has to be created where all settings are done.
				</ofx:paragraph>
		    </l:item>
		    
		    <l:item>
		    	<ofx:paragraph lang="en">
					The <text:emphasis bold="true">data stores</text:emphasis> have to be configured. The most important one the is connection the
					PostGIS database.
				</ofx:paragraph>
		    </l:item>
		    
		    <l:item>
		    	<ofx:paragraph lang="en">
					The <text:emphasis bold="true">coverage store</text:emphasis> need to be added for each raster data source.
				</ofx:paragraph>
		    </l:item>
		    
		    <l:item>
		    	<ofx:paragraph lang="en">
					The <text:emphasis bold="true">feature types</text:emphasis> are individual tables of the data store and provide access to vector data.
				</ofx:paragraph>
		    </l:item>
		    
		   	<l:item>
		    	<ofx:paragraph lang="en">
					All <text:emphasis bold="true">layers</text:emphasis> have to be configured, either with a coverage stroe or a feature type.
				</ofx:paragraph>
		    </l:item>
		    
		   	<l:item>
		    	<ofx:paragraph lang="en">
					For each layer a individual <text:emphasis bold="true">style</text:emphasis> has to be configured with a Styled Layer Descriptor (SLD).
				</ofx:paragraph>
		    </l:item>
		    
		</l:list>
		
		<ofx:paragraph lang="en">
			A manual configuration is possible, but takes a long time for all settings. Thus, a configuration tool is provided to automatically configure GeoServer
			with all required settings. The configuration tool connects to the REST interface of GeoServer. 
		</ofx:paragraph>
		<ofx:listing external="listing/admin/installation/geoserver/configuration.txt"/>
		
		<ofx:paragraph lang="en">
			The configuration tools needs a properties file with several entries, the path to the file has to be specified in the command line and needs to contain these
			entries: 
		</ofx:paragraph>
		<ofx:listing external="listing/admin/installation/geoserver/properties.txt"/>
		
	</ofx:section>
	
	
	<ofx:section id="section.admin.installation.geoserver.database">
		<ofx:title lang="en">Database Tuning</ofx:title>
		
		<ofx:paragraph lang="en">
			The geospatial tables are managed by the Application Server. To improve the performance of the system,
			some additional database indexes have to be created manually. 
		</ofx:paragraph>
		<ofx:listing external="listing/admin/installation/geoserver/database.txt"/>
	</ofx:section>
	
	<ofx:section>
			<ofx:title lang="en">Start JBoss as a service</ofx:title>
			
			<ofx:paragraph lang="en" version="1">
					xxx
			</ofx:paragraph>
			
			<ofx:listing>
				<ofx:raw>sudo touch /etc/init.d/geoserver
sudo chmod 755 /etc/init.d/geoserver
sudo vi /etc/init.d/geoserver</ofx:raw>
			</ofx:listing>
			
			<ofx:paragraph lang="en" version="1">
					xxx
			</ofx:paragraph>
			
			<ofx:listing>
				<ofx:raw><![CDATA[#!/bin/sh
### BEGIN INIT INFO
# Provides: geoserver
# Required-Start: $local_fs $remote_fs $network $syslog
# Required-Stop: $local_fs $remote_fs $network $syslog
# Should-Start: postgresql
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Management of GeoServer
### END INIT INFO

export GEOSERVER_HOME=/opt/geoserver-2.5.2
export JAVA_HOME=$(readlink -f /usr/bin/javac | sed "s:/bin/javac::")

case "$1" in
start)
echo "Starting GeoServer"
start-stop-daemon --start --quiet --background --chuid jboss --exec ${GEOSERVER_HOME}/bin/startup.sh
;;
stop)
echo "Stopping GeoServer"
start-stop-daemon --start --quiet --background --chuid jboss --exec ${GEOSERVER_HOME}/bin/shutdown.sh
;;
log)
echo "Showing server.log ..."
tail -1000f ${JBOSS_HOME}/standalone/log/server.log
;;
*)
echo "Usage: /etc/init.d/geoserver {start|stop|log}"
exit 1
;; esac
exit 0]]></ofx:raw>
		</ofx:listing>
			
		<ofx:paragraph lang="en" version="1">
			Then I ran sudo update-rc.d geoserver defaults so that JBoss automatically starts on system boot
		</ofx:paragraph>
			
		</ofx:section>
	   
</ofx:section>