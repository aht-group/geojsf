<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:aht="http://ahtutils.sourceforge.net/jsf"
    xmlns:composite="http://java.sun.com/jsf/composite">
    
	<composite:interface componentType="org.geojsf.component.Map">
     <composite:attribute name="clientId" shortDescription="DOM-ID of the component - chosen automatically or generated by given ID"/>
     <composite:attribute name="imagePath" shortDescription="DEPRECATED - use geojsf.THEME in your web-app configuration"/>
     <composite:attribute name="mapOptions" default=" {  }" shortDescription="ADVANCED USERS can pass map options to the OpenLayers constructor here"/>
     <composite:attribute name="centerX" default="0.0" shortDescription="X-coordinate for initial map center"/>
     <composite:attribute name="centerY" default="0.0" shortDescription="Y-coordinate for initial map center"/>
     <composite:attribute name="zoomLevel" default="5" shortDescription="Initial zoom level"/>
     <composite:attribute name="overviewMap" shortDescription="Name of the DIV element to hold the overview map"/>
     <composite:attribute name="overviewMapX" default="149" shortDescription="height of the overview map"/>
     <composite:attribute name="overviewMapY" default="149" shortDescription="width of the overview map"/>
     <composite:attribute name="width" default="100%"   shortDescription="The width of the map canvas"/>
     <composite:attribute name="height" default="400"  shortDescription="The height of the map canvas"/>
     <composite:attribute name="value" shortDescription="Contains info about what services and layers should be displayed. For a reference check our Data structure tutorial"/>
     <composite:attribute name="coordinates" shortDescription="DEPRECATED - use AJAX based map click handler to access coordinates"/>"/>
     <composite:attribute name="simpleWmsUrl" shortDescription="In simple mode, this attribute defines the WMS service URL"/>
     <composite:attribute name="simpleLayers"  shortDescription="In simple mode, this attribute defines a comma separated list of layers"/>
     <composite:attribute name="listener" required="false" method-signature="void listener(org.geojsf.xml.gml.Coordinates)" shortDescription="DEPRECATED - use AJAX based map click handler"/>
     <composite:clientBehavior name="mapClick" 
                              event="click"
                            targets="#{cc.clientId}"/>
     </composite:interface>
        
  <composite:implementation>
   	 <script src="http://openlayers.org/api/OpenLayers.js"/>
   	 <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
   	 <h:outputScript library="geojsf"     name="GeoJSF.js"/>
  <!--   <h:outputScript library="geojsf"     name="scalebar.js"/> --> 
  <!--   <h:outputStylesheet library="geojsf" name="scalebar-thin.css"/> -->   
     <h:outputStylesheet library="geojsf" name="geojsf.css"/>
     <h:outputScript name="jsf.js" library="javax.faces" target="head"/>
     #{cc.fallback()}
     
     <div id="#{cc.clientId}" style="padding: 0; width:#{cc.attrs.width};height:#{cc.attrs.height}px" />
     <c:if test="#{!empty cc.attrs.moverview}">
	 	<div id="#{cc.attrs.overviewMap}" style="width:#{cc.attrs.overviewMapY}px;height:#{cc.attrs.overviewMapX}px" />
	 </c:if>
	 
	 	

	 
	 
	 
	 <h:outputScript>
       // var mloptions = #{cc.attrs.layerOptions};
        var mcoptions = #{cc.attrs.mapOptions};
        var mapDOMelement = $("##{cc.clientId.replaceAll(":","\\\\\\\\:")}");
        var inputDOMelement = $("##{cc.clientId.replaceAll(":","\\\\\\\\:")}\\:coordinates");
        GeoJSF.addClickHandler('#{cc.clientId}','#{cc.clientId}:resetLayers', inputDOMelement, mapDOMelement, '#{cc.clientId}');
	    GeoJSF.initMap("#{cc.attrs.clientId}",mcoptions);
	        <c:if test="#{!empty initParam['geojsf.THEME']}">
	 			OpenLayers.ImgPath='#{facesContext.externalContext.requestContextPath}/#{initParam['geojsf.THEME']}/';
	 		</c:if>
	//  GeoJSF.addCoordinatesControl("northeast");
     </h:outputScript>
     <composite:insertChildren/>
     <h:outputScript id="resetLayers">
     		GeoJSF.resetLayers();
	 		<ui:repeat value="#{cc.serviceList}" var="service" varStatus="status">
	 		    var url    = "#{service.url}";
	 		    var name   = "#{service.code}";
	 			var params = {};
	 			params.layers      = "#{cc.layerString(service)}";
	 			params.transparent = "true";
	 			params.format      = 'image/png';
	 			var options = {};
	 			options.isBaseLayer= #{status.first};
	 			GeoJSF.addLayer(name, url, params, options);
	 			
	 		</ui:repeat>
     	GeoJSF.center(#{cc.attrs.centerX},#{cc.attrs.centerY},#{cc.attrs.zoomLevel});
     </h:outputScript>
  </composite:implementation>
</html>